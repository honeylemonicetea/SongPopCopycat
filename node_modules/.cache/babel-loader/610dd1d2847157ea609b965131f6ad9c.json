{"ast":null,"code":"var _jsxFileName = \"/Users/pinya/Desktop/PORTFOLIO PROJECTS/SongPopCopycat/src/screens/GameScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NavLink, useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { songList } from '../actions/songActions';\nimport Song4 from '../components/Song4';\nimport '../Styles/GameScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameScreen(props) {\n  _s();\n\n  let params = useParams();\n  const dispatch = useDispatch();\n  const allSongs = useSelector(state => state.songsReducer);\n  const {\n    loading,\n    error,\n    songs\n  } = allSongs; // localStorage.setItem('correct', \"0\")\n  // localStorage.setItem('wrong', \"0\")\n\n  let cor = localStorage.getItem('correct');\n  let wrong = localStorage.getItem(\"wrong\");\n  useEffect(() => {\n    dispatch(songList(params.artist_slug));\n  }, []);\n  console.log(songs);\n\n  let refresh = () => {\n    dispatch(songList(params.artist_slug));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: songs.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist_cover\",\n        style: {\n          backgroundImage: `url(${songs.cover_img})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Correct: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), cor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Wrong: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), wrong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), loading ? \"\" : error ? {\n        error\n      } : /*#__PURE__*/_jsxDEV(Song4, {\n        audio_src: songs.correct ? songs.correct.preview_url : \"\",\n        correct: songs.correct ? songs.correct.title : \"\",\n        all_songs: songs.all_songs ? songs.all_songs : [],\n        refr: refresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(GameScreen, \"e/Ifs0/N9uw4hR+vsFzPSKyvBgY=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = GameScreen;\nexport default GameScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","NavLink","useParams","useNavigate","useDispatch","useSelector","songList","Song4","GameScreen","props","params","dispatch","allSongs","state","songsReducer","loading","error","songs","cor","localStorage","getItem","wrong","artist_slug","console","log","refresh","name","backgroundImage","cover_img","correct","preview_url","title","all_songs"],"sources":["/Users/pinya/Desktop/PORTFOLIO PROJECTS/SongPopCopycat/src/screens/GameScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {NavLink, useParams, useNavigate} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {songList} from '../actions/songActions'\r\nimport Song4 from '../components/Song4'\r\n\r\nimport '../Styles/GameScreen.css'\r\n\r\nfunction GameScreen(props) {\r\n    let params = useParams()\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const allSongs = useSelector(state => state.songsReducer);\r\n    const {loading, error, songs}  = allSongs\r\n    // localStorage.setItem('correct', \"0\")\r\n    // localStorage.setItem('wrong', \"0\")\r\n    let cor = localStorage.getItem('correct')\r\n    let wrong = localStorage.getItem(\"wrong\");\r\n   \r\n\r\n    useEffect(() => {\r\n        dispatch(songList(params.artist_slug));\r\n    }, [])\r\n    console.log(songs)\r\n\r\n    let refresh=()=>{\r\n        dispatch(songList(params.artist_slug));\r\n    }\r\n  \r\n    return (\r\n      <div className='game-container'>\r\n        <div className=\"game-inner\">\r\n\r\n          <h1>{songs.name}</h1>\r\n          {/* <img src={songs.cover_img} className='playlist_cover'/> */}\r\n          <div className=\"playlist_cover\" style={{backgroundImage:`url(${songs.cover_img})`}}></div>\r\n          <p>\r\n            {\" \"}\r\n            <b>Correct: </b>\r\n            {cor}\r\n          </p>\r\n          <p>\r\n            <b>Wrong: </b>\r\n            {wrong}\r\n          </p>\r\n          {loading ? (\r\n            \"\"\r\n          ) : error ? (\r\n            { error }\r\n          ) : (\r\n            <Song4\r\n              audio_src={songs.correct ? songs.correct.preview_url : \"\"}\r\n              correct={songs.correct ? songs.correct.title : \"\"}\r\n              all_songs={songs.all_songs ? songs.all_songs : []} refr = {refresh}\r\n            />\r\n          )}\r\n        \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default GameScreen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA8C,kBAA9C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,0BAAP;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACvB,IAAIC,MAAM,GAAGR,SAAS,EAAtB;EAGA,MAAMS,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAA5B;EACA,MAAM;IAACC,OAAD;IAAUC,KAAV;IAAiBC;EAAjB,IAA2BL,QAAjC,CANuB,CAOvB;EACA;;EACA,IAAIM,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAV;EACA,IAAIC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;EAGApB,SAAS,CAAC,MAAM;IACZW,QAAQ,CAACL,QAAQ,CAACI,MAAM,CAACY,WAAR,CAAT,CAAR;EACH,CAFQ,EAEN,EAFM,CAAT;EAGAC,OAAO,CAACC,GAAR,CAAYP,KAAZ;;EAEA,IAAIQ,OAAO,GAAC,MAAI;IACZd,QAAQ,CAACL,QAAQ,CAACI,MAAM,CAACY,WAAR,CAAT,CAAR;EACH,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBAEE;QAAA,UAAKL,KAAK,CAACS;MAAX;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE;QAAK,SAAS,EAAC,gBAAf;QAAgC,KAAK,EAAE;UAACC,eAAe,EAAE,OAAMV,KAAK,CAACW,SAAU;QAAxC;MAAvC;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,WACG,GADH,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGV,GAHH;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAUE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGG,KAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,EAcGN,OAAO,GACN,EADM,GAEJC,KAAK,GACP;QAAEA;MAAF,CADO,gBAGP,QAAC,KAAD;QACE,SAAS,EAAEC,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACY,OAAN,CAAcC,WAA9B,GAA4C,EADzD;QAEE,OAAO,EAAEb,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACY,OAAN,CAAcE,KAA9B,GAAsC,EAFjD;QAGE,SAAS,EAAEd,KAAK,CAACe,SAAN,GAAkBf,KAAK,CAACe,SAAxB,GAAoC,EAHjD;QAGqD,IAAI,EAAIP;MAH7D;QAAA;QAAA;QAAA;MAAA,QAnBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BH;;GArDQjB,U;UACQN,S,EAGIE,W,EACAC,W;;;KALZG,U;AAuDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}